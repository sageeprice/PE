import org.junit.Test;
import problems.impl.*;
import problems.incomplete.Euler174;

import static org.junit.Assert.assertEquals;

/** Tests to verify problems complete successfully. Only fast tests (<1 seconds). */
public class EulerFastTests {

    @Test
    public void testFastProblems() {
        assertEquals(new Euler001().solve(), "233168");
        assertEquals(new Euler002().solve(), "4613732");
        assertEquals(new Euler003().solve(), "6857");
        assertEquals(new Euler004().solve(), "906609");
        assertEquals(new Euler005().solve(), "232792560");
        assertEquals(new Euler006().solve(), "25164150");
        assertEquals(new Euler007().solve(), "104743");
        assertEquals(new Euler008().solve(), "23514624000");
        assertEquals(new Euler009().solve(), "31875000");
        assertEquals(new Euler010().solve(), "142913828922");
        assertEquals(new Euler011().solve(), "70600674");
        assertEquals(new Euler012().solve(), "76576500");
        assertEquals(new Euler013().solve(), "5537376230");
        assertEquals(new Euler014().solve(), "837799");
        assertEquals(new Euler015().solve(), "137846528820");
        assertEquals(new Euler016().solve(), "1366");
        assertEquals(new Euler017().solve(), "21124");
        assertEquals(new Euler018().solve(), "1074");
        assertEquals(new Euler019().solve(), "171");
        assertEquals(new Euler020().solve(), "648");
        assertEquals(new Euler021().solve(), "31626");
        assertEquals(new Euler022().solve(), "871198282");
        assertEquals(new Euler023().solve(), "4179871");
        assertEquals(new Euler024().solve(), "2783915460");
        assertEquals(new Euler025().solve(), "4782");
        assertEquals(new Euler026().solve(), "983");
        assertEquals(new Euler027().solve(), "-59231");
        assertEquals(new Euler028().solve(), "669171001");
        assertEquals(new Euler029().solve(), "9183");
        assertEquals(new Euler030().solve(), "443839");
        assertEquals(new Euler031().solve(), "73682");
        assertEquals(new Euler032().solve(), "45228");
        assertEquals(new Euler033().solve(), "100");
        assertEquals(new Euler034().solve(), "40730");
        assertEquals(new Euler035().solve(), "55");
        assertEquals(new Euler036().solve(), "872187");
        assertEquals(new Euler037().solve(), "748317");
        assertEquals(new Euler038().solve(), "932718654");
        assertEquals(new Euler039().solve(), "840");
        assertEquals(new Euler040().solve(), "210");
        assertEquals(new Euler041().solve(), "7652413");
        assertEquals(new Euler042().solve(), "162");
        assertEquals(new Euler043().solve(), "16695334890");
        assertEquals(new Euler044().solve(), "5482660");
        assertEquals(new Euler045().solve(), "1533776805");
        assertEquals(new Euler046().solve(), "5777");
        assertEquals(new Euler047().solve(), "134043");
        assertEquals(new Euler048().solve(), "9110846700");
        assertEquals(new Euler049().solve(), "296962999629");
        assertEquals(new Euler050().solve(), "997651");
        assertEquals(new Euler051().solve(), "121313");
        assertEquals(new Euler052().solve(), "142857");
        assertEquals(new Euler053().solve(), "4075");
        assertEquals(new Euler054().solve(), "376");
        assertEquals(new Euler055().solve(), "249");
        assertEquals(new Euler056().solve(), "972");
        assertEquals(new Euler057().solve(), "153");
        assertEquals(new Euler058().solve(), "26241");
        assertEquals(new Euler059().solve(), "107359");
        assertEquals(new Euler061().solve(), "28684");
        assertEquals(new Euler062().solve(), "127035954683");
        assertEquals(new Euler063().solve(), "49");
        assertEquals(new Euler064().solve(), "1322");
        assertEquals(new Euler065().solve(), "272");
        assertEquals(new Euler066().solve(), "661");
        assertEquals(new Euler067().solve(), "7273");
        assertEquals(new Euler068().solve(), "6531031914842725");
        assertEquals(new Euler069().solve(), "510510");
        assertEquals(new Euler071().solve(), "428570");
        assertEquals(new Euler072().solve(), "303963152391");
        assertEquals(new Euler073().solve(), "7295372");
        assertEquals(new Euler074().solve(), "402");
        assertEquals(new Euler075().solve(), "161667");
        assertEquals(new Euler076().solve(), "190569291");
        assertEquals(new Euler077().solve(), "71");
        assertEquals(new Euler078().solve(), "55374");
        assertEquals(new Euler079().solve(), "73162890");
        assertEquals(new Euler080().solve(), "40886");
        assertEquals(new Euler081().solve(), "427337");
        assertEquals(new Euler082().solve(), "260324");
        assertEquals(new Euler083().solve(), "425185");
        assertEquals(new Euler085().solve(), "2772");
        assertEquals(new Euler086().solve(), "1818");
        assertEquals(new Euler087().solve(), "1097343");
        assertEquals(new Euler088().solve(), "7587457");
        assertEquals(new Euler089().solve(), "743");
        assertEquals(new Euler090().solve(), "1217");
        assertEquals(new Euler091().solve(), "14234");
        assertEquals(new Euler096().solve(), "24702");
        assertEquals(new Euler098().solve(), "18769");
        assertEquals(new Euler099().solve(), "709");
        assertEquals(new Euler100().solve(), "756872327473");
        assertEquals(new Euler104().solve(), "329468");
        assertEquals(new Euler107().solve(), "259679");
        assertEquals(new Euler108().solve(), "180180");
        assertEquals(new Euler109().solve(), "38182");
        assertEquals(new Euler112().solve(), "1587000");
        assertEquals(new Euler113().solve(), "51161058134250");
        assertEquals(new Euler114().solve(), "16475640049");
        assertEquals(new Euler115().solve(), "168");
        assertEquals(new Euler116().solve(), "20492570929");
        assertEquals(new Euler117().solve(), "100808458960497");
        assertEquals(new Euler120().solve(), "333082500");
        assertEquals(new Euler123().solve(), "21035");
        assertEquals(new Euler124().solve(), "21417");
        assertEquals(new Euler125().solve(), "2906969179");
        assertEquals(new Euler131().solve(), "173");
        assertEquals(new Euler139().solve(), "10057761");
        assertEquals(new Euler151().solve(), "464399");
        assertEquals(new Euler158().solve(), "409511334375");
        assertEquals(new Euler160().solve(), "16576");
        assertEquals(new Euler162().solve(), "3D58725572C62302");
        assertEquals(new Euler164().solve(), "378158756814587");
        assertEquals(new Euler173().solve(), "1572729");
        assertEquals(new Euler174().solve(), "209566");
        assertEquals(new Euler187().solve(), "17427258");
        assertEquals(new Euler191().solve(), "1918080160");
        assertEquals(new Euler202().solve(), "1209002624");
        assertEquals(new Euler205().solve(), "0.5731441");
        assertEquals(new Euler207().solve(), "44043947822");
        assertEquals(new Euler232().solve(), "0.83648556");
        assertEquals(new Euler243().solve(), "892371480");
        assertEquals(new Euler301().solve(), "2178309");
        assertEquals(new Euler317().solve(), "1856532.8455");
        assertEquals(new Euler323().solve(), "6.3551758451");
        assertEquals(new Euler346().solve(), "336108797689259276");
        assertEquals(new Euler358().solve(), "3284144505");
        assertEquals(new Euler500().solve(), "35407281");
        assertEquals(new Euler577().solve(), "265695031399260211");
        // ~0.5 seconds
        assertEquals(new Euler587().solve(), "2240");
        assertEquals(new Euler601().solve(), "1617243");
        assertEquals(new Euler622().solve(), "3010983666182123972");
     }
}
